# 使用的用户和组
# user nobody;

# 指定工作衍生进程数，一般等于CPU总核数或者总核数的两倍
worker_processes 4;

# 指定错误日志存放的路径
error_log /home/app/logs/nginx/error.log;

# 指定文件描述符路径
pid /var/run/nginx.pid;
# 前台启动
daemon off;

# 指定最大文件打开数量
worker_rlimit_nofile 51200;

events {
        # 使用的网络I/O模型，Linux推荐使用epoll模型；FreeBSD推荐使用kqueue模型
        use epoll;

        # 允许的连接数
        worker_connections 51200;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # nginx缓冲设置
    server_names_hash_bucket_size 128;
    client_header_buffer_size 100m;
    large_client_header_buffers 4 100m;

    # 允许最大上传单个文件大小
    client_max_body_size 200m;

    # 先保存到本地，再传给用户
    client_body_buffer_size 128k;

    # 超时时间
    client_header_timeout 15;
    client_body_timeout 15;

    # proxy time
    proxy_connect_timeout 15;
    proxy_send_timeout 100;
    proxy_read_timeout 100;

    # 代理请求缓存区_这个缓存区会保存用户的头信息以供Nginx进行规则处理_一般只要能保存夏头信息即可
    proxy_buffer_size 16k;

    # 同上，告诉Nginx保存单个用户的几个Buffer最大用多大空间
    proxy_buffers 4 32k;

    # 如果系统很忙的时候可以申请更大的proxy_buffers，官方推荐*2
    proxy_busy_buffers_size 64k;

    # 关闭故障转移
    proxy_next_upstream off;

    log_format _main '$remote_addr "$time_iso8601" $request_method "$uri" "$args" "$request_body" $status $body_bytes_sent $request_time "$http_user_agent"';
    access_log /home/app/logs/nginx/access.log _main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    #keepalive_timeout 65;
    keepalive_timeout 65;

    #fastcgi配置
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;

    # gzip压缩设置
    gzip on;
    gzip_http_version 1.1;
    gzip_comp_level 6;
    gzip_proxied off;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_types text/plain text/xml text/javascript text/css application/json application/x-javascript application/xml application/xml+css application/javascript image/png;
    gzip_vary on;
    gzip_static on;

    # nginx proxy 缓存设置
    # proxy_temp_path和proxy_cache_path指定的路径，必须在同一分区
    #proxy_temp_path        /data/nginx/proxy_temp_path;
    # 设置web缓存区名称为cache_one，内存缓存空间大小为500m，
    # 自动清除超过1天没有被访问的数据，硬盘缓存空间大小为30g
    #proxy_cache_path /data/nginx/proxy_cache_path levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=30g;

    upstream frontends {
        server 127.0.0.1:8000;
        server 127.0.0.1:8001;
        server 127.0.0.1:8002;
        server 127.0.0.1:8003;
    }

    # upstream & server & location
    server {
		    listen      8999;
		    server_name wangying28-2020-004-3.bcc-bdbl.baidu.com;
		    charset     utf-8;
		    client_max_body_size 75M;
		    location / {
                add_header Access-Control-Allow-Origin 'http://wangying28-2020-004-3.bcc-bdbl.baidu.com';
                add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Cookie';
                add_header Access-Control-Allow-Methods 'POST, GET, OPTIONS, PUT, DELETE, HEAD';
                add_header Access-Control-Allow-Credentials true;
                add_header X-Real-IP $remote_addr;

                if ($request_method = 'OPTIONS') {
                    return 204;
                }
                proxy_pass http://frontends;
		        #proxy_pass http://127.0.0.1:8000;
		    }
		    location /ping {
		        return 200 "ok";
		    }
		    location /do_not_delete.html {
                return 200 "ok";
            }
	  }
    include /etc/nginx/conf.d/*.conf;
}